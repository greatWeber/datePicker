{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/datePicker.ts","src/ts/index.ts","src/ts/template.ts","src/ts/touch.ts","src/ts/utils.ts"],"names":[],"mappings":"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","file":"datePicker.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// 时间选择器核心代码\r\n\r\nimport Utils from './utils';\r\n\r\nimport * as temp from './template';\r\nimport Touchs from './touch';\r\n\r\n// picker参数接口\r\ninterface pickers {\r\n        startYear?: string;\r\n        endYear?: string;\r\n        defaultDate?: string;\r\n        key?: number;\r\n        outFormat ?: string;\r\n        onchange?: Function;\r\n        success?: Function;\r\n        type?: string; //选择器类型：single, range, \r\n\r\n}\r\n\r\nexport default class DatePicker extends Utils {\r\n    private _opt: object = {}; //全局配置\r\n    private _params: object = {}; //初始化配置\r\n    private _key: number = 1; //唯一key\r\n    private _keyList: Array<number> = []; //key列表\r\n\r\n    private _monthStr: string = ''; //月份字符串\r\n    private _dayStr: string = ''; //天数字符串\r\n\r\n    private _currentPicker: any = null; //保存当前显示的选择器\r\n\r\n    private _currentIndexs: Array<number> = [];//保存当前选择的格子索引\r\n\r\n    private _currentValue: Array<number|string> = []; //保存当前选择的值\r\n\r\n    private _mask: any = null; //保存唯一的遮罩\r\n\r\n    get opt(): any{\r\n        return this._opt;\r\n    }\r\n\r\n    set opt(val: any){\r\n        this._opt = val;\r\n    }\r\n\r\n    get params(): pickers{\r\n        return this._params;\r\n    }\r\n\r\n    set params(val: pickers){\r\n        this._params = val;\r\n    }\r\n\r\n    get key(): number{\r\n        return this._key;\r\n    }\r\n\r\n    set key(val: number){\r\n        this._key = val;\r\n    }\r\n\r\n    get keyList(): any{\r\n        return this._keyList;\r\n    }\r\n\r\n    set keyList(val: any){\r\n        this._keyList = val;\r\n    }\r\n\r\n    get monthStr(): string{\r\n        return this._monthStr;\r\n    }\r\n\r\n    set monthStr(val: string){\r\n        this._monthStr = val;\r\n    }\r\n\r\n    get dayStr(): string{\r\n        return this._dayStr;\r\n    }\r\n\r\n    set dayStr(val: string){\r\n        this._dayStr = val;\r\n    }\r\n\r\n    get currentPicker(): any{\r\n        return this._currentPicker;\r\n    }\r\n\r\n    set currentPicker(val: any){\r\n        this._currentPicker = val;\r\n    }\r\n\r\n    get currentIndexs(): any{\r\n        return this._currentIndexs;\r\n    }\r\n\r\n    set currentIndexs(val: any){\r\n        this._currentIndexs = val;\r\n    }\r\n\r\n    get currentValue(): any{\r\n        return this._currentValue;\r\n    }\r\n\r\n    set currentValue(val: any){\r\n        this._currentValue = val;\r\n    }\r\n\r\n    get mask(): any{\r\n        return this._mask;\r\n    }\r\n\r\n    set mask(val: any){\r\n        this._mask = val;\r\n    }\r\n\r\n    // 辅助类变量\r\n    private _height :number = 0; //选择器格子的高度\r\n    private _maxKeyCount :number = 20; //可创建选择器的最大数量\r\n\r\n    constructor(options?: object){\r\n        super();\r\n        this.opt = Object.assign({\r\n            maxKeyCount: this._maxKeyCount,\r\n            onchange: ()=>{},\r\n            success: ()=>{}\r\n        },options);\r\n\r\n        this.opt.maxKeyCount = this.opt.maxKeyCount > 0 && this.opt.maxKeyCount<=20\r\n                                ? this.opt.maxKeyCount\r\n                                : this._maxKeyCount;\r\n        \r\n\r\n        this.monthStr = this.createMonthStr();\r\n        this.dayStr = this.createDayStr();\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    public picker(params?: pickers){\r\n        this.params = Object.assign({ \r\n            startYear: '1990',\r\n            endYear: '2030',\r\n            defaultDate: this.getToday('-'),\r\n            key: this.key,\r\n            outFormat: '-',\r\n            onchange: ()=>{},\r\n            success: ()=>{},\r\n            type: 'range'\r\n        },params);\r\n\r\n        // 保存key值，如果列表的key值过多，禁止创建\r\n        if(!this.keyList.includes(this.params.key)){\r\n\r\n            this.keyList.push(this.params.key);\r\n            this.key+=1;\r\n        }\r\n        if(this.keyList.length>this.opt.maxKeyCount){\r\n            console.error(`\r\n            Error:检测到页面上创建的选择器过多!\r\n            请检查代码是否有问题\r\n            请不要在循环或者事件中重复调用.picker()方法\r\n            若非要如此调用，一定要加上key属性\r\n            建议在外面调用.picker()方法，在里面调用.show()方法显示\r\n            `);\r\n            return;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    public render(){ \r\n        this.createMask();\r\n        this.createPicker();\r\n        \r\n    }\r\n\r\n    public createMask(){\r\n        // 创建蒙版\r\n        let maskName = `picker-mask`;\r\n        let $mask = this.select(`.${maskName}`);\r\n        let _this = this;\r\n        if(!$mask){\r\n            $mask = this.createElm(document.body,'div',maskName);\r\n            this.setCss($mask,{\r\n                'transition': '0.3s all linear',\r\n                'opacity': '0'\r\n            });\r\n\r\n        }\r\n\r\n        this.mask = $mask;\r\n\r\n        _this.sleep(()=>{\r\n            _this.setCss($mask,{\r\n                'opacity':'1'\r\n            })\r\n        },100)\r\n    }\r\n\r\n    public createPicker(){ \r\n        // 创建选择器\r\n\r\n        this.currentPicker = null; //每次渲染前都把之前的选择器释放\r\n\r\n        let pickerName = `picker-key-${this.params.key}`;\r\n        let $picker = this.select(`.${pickerName}`);\r\n        let $pickerWrapper = this.select(`.${pickerName} .picker-wrapper`);\r\n        let _this = this;\r\n        \r\n        if(!$picker){\r\n            let yearStr = this.createYearStr();\r\n            let pickerHtml = temp.picker.replace('$1',yearStr)\r\n                                        .replace('$2',this.monthStr)\r\n                                        .replace('$3',this.dayStr);\r\n            // console.log('picker',pickerHtml);\r\n            $picker = this.createElm(document.body,'div',pickerName);\r\n            $picker.innerHTML = pickerHtml;\r\n            $pickerWrapper = this.select(`.${pickerName} .picker-wrapper`);\r\n            this.setCss($pickerWrapper,{\r\n                'transition': '0.3s all linear',\r\n                'transform': 'translateY(100%)'\r\n            });\r\n            if(!_this._height){\r\n                _this._height = _this.select('.date-unit',$picker).clientHeight;\r\n            }\r\n            this.currentPicker = $picker || {}; //保存当前的选择器\r\n            this.currentPicker.years = this.getYearArray();\r\n            let defaultInfo = this.setDefaultView(); //设置默认日期的视图\r\n            this.bindEvents(defaultInfo);\r\n            this.rangeOperation();\r\n        }\r\n\r\n        \r\n\r\n        _this.sleep(() => {\r\n            _this.setCss($pickerWrapper,{\r\n                'transform': 'translateY(0)'\r\n            });\r\n        }, 100)\r\n\r\n        // 添加显示状态\r\n        $picker.classList.add('__picker-type-show');\r\n        this.currentPicker = $picker || {}; //保存当前的选择器\r\n        this.currentPicker.years = this.getYearArray();\r\n    }\r\n\r\n    public getYearArray(): Array<number>{\r\n        let years = [];\r\n        let startYear: any =  this.params.startYear;\r\n        let endYear: any = this.params.endYear;\r\n        for(let i=startYear-0;i<=endYear-0;i++){\r\n            years.push(i);\r\n        }\r\n        return years;\r\n    }\r\n\r\n    public createYearStr(): string{\r\n        // 创建年\r\n        let years = [];\r\n        let startYear: any =  this.params.startYear;\r\n        let endYear: any = this.params.endYear;\r\n        for(let i=startYear-0;i<=endYear-0;i++){\r\n            years.push(i);\r\n        }\r\n        let html = '';\r\n        years.forEach((item,i)=>{\r\n            html+= `<p class=\"date-unit\" data-month=\"${item}\">${item}年</p>`;\r\n        });\r\n        // console.log('year',html);\r\n        return html;\r\n    }\r\n\r\n    public createMonthStr(): string {\r\n        // 创建月\r\n        let months = [];\r\n        for(let i=1;i<=12;i++){\r\n            months.push(i);\r\n        }\r\n        let html = '';\r\n        months.forEach((item,i)=>{\r\n            let month = item>=10? item: '0'+item;\r\n            html+= `<p class=\"date-unit\" data-month=\"${item}\">${month}月</p>`;\r\n        });\r\n        // console.log('month',html);\r\n        return html;\r\n    }\r\n\r\n    public createDayStr(): string {\r\n        // 创建day\r\n        let days = [];\r\n        for(let i=1;i<=31;i++){\r\n            days.push(i);\r\n        }\r\n        let html = '';\r\n        days.forEach((item,i)=>{\r\n            let day = item>=10? item: '0'+item;\r\n            html+= `<p class=\"date-unit\" data-month=\"${item}\">${day}日</p>`;\r\n        });\r\n        // console.log('day',html);\r\n        return html;\r\n    }\r\n\r\n    public setDefaultView(){\r\n        if(!this.params.defaultDate){\r\n            console.error('Error: 默认日期(defaultDate)不能为空');\r\n            return;\r\n        }\r\n        let dateArray = this.params.defaultDate.split('-');\r\n        if(!dateArray || dateArray.length<3){\r\n            console.error('Error:默认日期(defaultDate)的格式有误,默认格式:2019-01-01 or 2019-1-1');\r\n            return;\r\n        }\r\n        \r\n        let $picker = this.currentPicker;\r\n        let $dateUtils = this.selectAll('.date-item',$picker);\r\n        // year\r\n        let yearIndex = this.currentToIndex(parseInt(dateArray[0])-parseInt(this.params.startYear));\r\n        this.setCss($dateUtils[0],{\r\n            'transform':`translateY(${yearIndex*this._height}px)`\r\n        });\r\n        // month\r\n        let monthIndex = this.currentToIndex(parseInt(dateArray[1])-1);\r\n        console.log('monthIndex',this._height*monthIndex)\r\n        this.setCss($dateUtils[1],{\r\n            'transform':`translateY(${monthIndex*this._height}px)`\r\n        });\r\n\r\n        // month\r\n        let dayIndex = this.currentToIndex(parseInt(dateArray[2])-1);\r\n        this.setCss($dateUtils[2],{\r\n            'transform':`translateY(${dayIndex*this._height}px)`\r\n        });\r\n        return{\r\n            dateArray: dateArray,\r\n            heightArray: [yearIndex*this._height,monthIndex*this._height,dayIndex*this._height]\r\n        } ;\r\n\r\n    }\r\n\r\n    public bindEvents(defaultInfo: any){\r\n        if(!this.currentPicker){\r\n            console.error('Error: 选择器还没有渲染');\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        let $dateGroups = this.selectAll('.date-group',this.currentPicker);\r\n        let _this = this;\r\n        $dateGroups.forEach((dateGroup,i)=>{\r\n            let $dateUtils = _this.select('.date-item',dateGroup);\r\n            \r\n            _this.setCss($dateUtils,{\r\n                'transition':'0.1s all linear' \r\n            });\r\n            // 注意：EndY的值不应该为0，而是调用默认视图函数后的距离\r\n            let EndY: number = defaultInfo.heightArray[i];\r\n\r\n            let touchs = new Touchs(dateGroup);\r\n            touchs.touchStart(_this.touchStart);\r\n            touchs.touchMove((e: any, range: number)=>{\r\n                _this.touchMove(e,range,EndY,$dateUtils);\r\n            });\r\n            touchs.touchEnd((e:any, endY: number)=>{\r\n                EndY = _this.touchEnd(e,endY,EndY, $dateUtils,i,defaultInfo.dateArray);\r\n                console.log('touchEnd',EndY)\r\n            })\r\n        });\r\n\r\n        this.mask.addEventListener('click',this.hide);\r\n\r\n    }\r\n\r\n    private touchStart(){\r\n        console.log('start');\r\n    }\r\n\r\n    private touchMove(e: any, range: number, EndY: number, target: any){\r\n        this.setCss(target,{\r\n            'transform': `translateY(${EndY+range*1}px)`\r\n        });\r\n    }\r\n\r\n    private touchEnd(e: any, endY: number, EndY: number, target: any, Index: number, dateArray: Array<any>){\r\n        EndY = EndY+endY;\r\n        let min = EndY >0?Math.floor(EndY / this._height): Math.ceil(EndY / this._height);\r\n        let max = EndY >0? min+1: min-1;\r\n        let middle = (max+min)/2*this._height;\r\n        let current = 0;\r\n        let currentValue = dateArray;\r\n        // console.log('min',min);\r\n        // console.log('middle',middle);\r\n        // console.log('EndY', EndY);\r\n        if(Math.abs(EndY)>=Math.abs(middle)){\r\n            EndY = max*this._height;\r\n            current = max;\r\n        }else{\r\n            EndY = min*this._height;\r\n            current = min;\r\n        }\r\n        // 关于格子的数量\r\n        // 只有年和日是变化的，月份都是固定的(12)\r\n        var counts = 0;\r\n        switch (Index) {\r\n            case 0: //年\r\n                counts = this.currentPicker.years.length;\r\n                break;\r\n            case 1: //月\r\n                counts = 12;\r\n                break;\r\n            case 2: //日\r\n                // Todo\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        // 逻辑：\r\n        // 根据页面个结构，每个选择器只显示3个格子，所以中心的是2\r\n        // 那么头部不能超过的距离是 1*height\r\n        // 底部不能超过的距离是-(格子数量-2)*height\r\n        if(EndY>1*this._height){\r\n            EndY = 1*this._height;\r\n            current = 1;\r\n        }else if(Math.abs(EndY)>Math.abs(-(counts-2)*this._height)){\r\n            EndY = -(counts-2)*this._height;\r\n            current = -(counts-2);\r\n        }\r\n        this.currentIndexs[Index] = current; //保存当前的格子索引\r\n        let arrayIndex = this.currentToIndex(current); //把格子索引转成数组索引\r\n        if(Index==0){\r\n            // 只有年需要从数组中读取值\r\n            currentValue[Index] = this.currentPicker.years[arrayIndex];\r\n        }else{\r\n            currentValue[Index] = arrayIndex+1>=10?arrayIndex+1:'0'+(arrayIndex+1);\r\n        }\r\n        this.setCss(target,{\r\n            'transform': `translateY(${EndY}px)`\r\n        });\r\n\r\n        // 调用onchange回调\r\n        this.opt.onchange(currentValue);\r\n        this.params.onchange(currentValue);\r\n        this.$emit(`onchange_${this.params.key}`,currentValue);\r\n        return EndY;\r\n    }\r\n\r\n    public currentToIndex(current: number){\r\n        // 逻辑：\r\n        // 根据页面布局，得来第一个格子是正数，其他的距离都是负数\r\n        // 所以可以通过(1-current)来获取当前格子数组的索引\r\n        return 1-current;\r\n    }\r\n\r\n    public hide(){\r\n        let _this = this;\r\n        // 关闭遮罩\r\n        this.setCss(this.mask,{\r\n            'opacity':'0'\r\n        });\r\n        this.sleep(()=>{\r\n            _this.setCss(_this.mask,{\r\n                'display':'none'\r\n            });\r\n        },300);\r\n        // 关闭选择器\r\n        this.setCss(this.currentPicker,{\r\n            'transform':'translateY(100%)'\r\n        });\r\n        this.currentPicker.remove('__picker-type-show');\r\n        this.currentPicker.add('__picker-type-hide');\r\n        this.currentPicker = null;\r\n    }\r\n\r\n    public show(key: number|string){\r\n        if(!key){\r\n            let tip = `\r\n            show方法一定要传入key值\r\n            该值与picker方法的key参数一致\r\n            `;\r\n            console.error(tip);\r\n            this.errorTip(tip);\r\n            return;\r\n        }\r\n\r\n        let $picker = this.select(`picker-key-${key}`);\r\n        if(!$picker){\r\n            let tip = `\r\n            没有该key值的选择器\r\n            请检查是否写错!\r\n            `;\r\n            console.error(tip);\r\n            this.errorTip(tip);\r\n            return;\r\n        }\r\n\r\n        this.setCss($picker,{\r\n            'transform':'translateY(0px)'\r\n        });\r\n\r\n        $picker.classList.remove('__picker-type-hide');\r\n        $picker.classList.remove('__picker-type-show');\r\n\r\n    }\r\n\r\n    public rangeOperation(){\r\n        // 时间区间选择器的逻辑事件\r\n        let $picker = this.currentPicker;\r\n        let $rangeChilds = this.selectAll('.range-child',$picker);\r\n        let currentIndex = 0;\r\n        let _this = this;\r\n        $rangeChilds.forEach((rangeChild,i)=>{\r\n            console.log('rangeChild',rangeChild);\r\n            rangeChild.addEventListener('click',(e)=>{\r\n                console.log(e)\r\n                if(e.target.classList.contains('range-act'))return;\r\n                $rangeChilds.forEach(item => {\r\n\r\n                    item.classList.remove('range-act')\r\n                });\r\n\r\n                e.target.classList.add('range-act');\r\n                currentIndex = i;\r\n            })\r\n        });\r\n\r\n        let startTime ='', endTime = '';\r\n\r\n        this.$on(`onchange_${this.params.key}`,(data)=>{\r\n            let currentDate = data.join(_this.params.outFormat);\r\n            $rangeChilds[currentIndex].innerHTML = currentDate;\r\n            if(currentIndex==0){\r\n                // 开始日期\r\n                startTime = currentDate; \r\n            }else{\r\n                endTime = currentDate;\r\n            }\r\n        });\r\n\r\n        // \r\n\r\n    }\r\n}","import DatePicker from './datePicker';\r\n\r\nconst datePicker = new DatePicker();\r\n\r\ndatePicker.picker({\r\n    onchange:(data)=>{\r\n        console.log('onchange',data);\r\n    }\r\n});","// 模板字符串\r\n\r\nexport const mask = `\r\n<div class=\"picker-mask\"></div>\r\n`;\r\n\r\nexport const range = `\r\n<div class=\"picker-range\">\r\n    <p class=\"range-child start-time range-act\">开始日期</p>\r\n    <span>至</span>\r\n    <p class=\"range-child end-time\">结束日期</p>\r\n</div>\r\n`;\r\n\r\n\r\nexport const picker = `\r\n<div class=\"picker-wrapper\">\r\n    <div class=\"picker-head flex space-between\">\r\n        <span class=\"cancel\">取消</span>\r\n        <span class=\"sure\">确定</span>\r\n    </div>\r\n    <div class=\"picker-body\">\r\n        ${range}\r\n\r\n        <div class=\"date-content flex\">\r\n\r\n            <div class=\"date-group flex-item\">\r\n                    <div class=\"content-mask mask-top\"></div>\r\n                    <div class=\"content-mask mask-bottom\"></div>\r\n                    <div class=\"date-item \">\r\n                        $1\r\n                    </div>\r\n            </div>\r\n            <div class=\"date-group flex-item\">\r\n                <div class=\"content-mask mask-top\"></div>\r\n                <div class=\"content-mask mask-bottom\"></div>\r\n                <div class=\"date-item\">\r\n                    $2\r\n                </div>\r\n            </div>\r\n            <div class=\"date-group flex-item\">\r\n                <div class=\"content-mask mask-top\"></div>\r\n                <div class=\"content-mask mask-bottom\"></div>\r\n                <div class=\"date-item\">\r\n                    $3\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n`;\r\n\r\n","import { resolve } from \"any-promise\";\r\n\r\nexport default class Touchs {\r\n    private _target: any;\r\n    private _startY: number;\r\n    private _endY: number;\r\n    private _range: number;\r\n\r\n    // 辅助类参数\r\n    private bool: boolean = true;\r\n    private limit: number = 0;\r\n\r\n    constructor(target: any){\r\n        console.log('init')\r\n        this._target = target;\r\n    }\r\n\r\n    get target(): any{\r\n        if(this._target){\r\n            return this._target\r\n        }else{\r\n            console.error('Error: 没有找到target对象');\r\n            return null\r\n        }\r\n    }\r\n\r\n    get startY(): number{\r\n        return this._startY;\r\n    }\r\n\r\n    set startY(val: number){\r\n        this._startY = val;\r\n    }\r\n\r\n    \r\n    get endY(): number{\r\n        return this._endY; \r\n    }\r\n    \r\n    set endY(val: number) {\r\n        this._endY = val;\r\n    }\r\n\r\n    get range(): number {\r\n        return this._range;\r\n    }\r\n\r\n    set range(val: number){\r\n        this._range = val;\r\n    }\r\n\r\n\r\n    public touchStart(cb: Function){\r\n        // touchstart:\r\n        // 1. 给target绑定touch事件\r\n        console.log(this.target)  \r\n        let _this = this;\r\n        _this.target.addEventListener('touchstart',(e: any)=>{\r\n            _this.touchStartHander(e,cb);\r\n        },false)\r\n    }\r\n\r\n    private touchStartHander(e: any, cb: Function){\r\n        this.startY = e.touches[0].pageY;\r\n        console.log(this.startY);\r\n        cb(e);\r\n    }\r\n\r\n    public touchMove(cb: Function){\r\n        // touchmove\r\n        let _this = this;\r\n        _this.target.addEventListener('touchmove',(e: any)=>{\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            _this.touchMoveHander(e,cb);\r\n        },false)\r\n    }\r\n\r\n    private touchMoveHander(e: any, cb: Function){\r\n        // 限流-start\r\n        this.limit++;\r\n        if(this.limit>=5){\r\n            this.limit = 0;\r\n            this.bool = true;\r\n        }\r\n        if(!this.bool)return;\r\n        this.bool = false;\r\n        // 限流-end\r\n        \r\n        this.range = e.touches[0].pageY - this._startY;\r\n        cb(e,this.range);\r\n    }\r\n\r\n    public touchEnd(cb: Function){\r\n        // touchend\r\n        let _this = this;\r\n        _this.target.addEventListener('touchend',(e: any)=>{\r\n            _this.touchEndHander(e,cb);\r\n        },false);\r\n\r\n        _this.target.addEventListener('touchcancel',(e: any)=>{\r\n            _this.touchEndHander(e,cb);\r\n        },false);\r\n\r\n    }\r\n\r\n    private touchEndHander(e: any, cb: Function){\r\n        this.target.removeEventListener('touchstart',this.touchStartHander,false);\r\n        this.target.removeEventListener('touchmove',this.touchMoveHander,false);\r\n        this.target.removeEventListener('touchend',this.touchEndHander,false);\r\n        this.target.removeEventListener('touchcancel',this.touchEndHander,false);\r\n        \r\n        this.endY = this.range; \r\n        cb(e, this.endY);\r\n    }\r\n}","// 工具类\r\nexport default class Utils {\r\n    private _eventLists: object = {};\r\n    constructor(){}\r\n\r\n    public select(elm: string, target?: any){\r\n        if(target){\r\n            return target.querySelector(elm);\r\n        }\r\n        return document.querySelector(elm);\r\n    }\r\n\r\n    public selectAll(elm: string, target?: any){\r\n        if(target){\r\n            return target.querySelectorAll(elm);\r\n        }\r\n        return document.querySelectorAll(elm);\r\n    }\r\n\r\n    public createElm(target: any, label: string, className?: string){\r\n        // 创建元素\r\n        const $elm = document.createElement(label);\r\n        $elm.classList.add(className);\r\n        target.appendChild($elm);\r\n        return $elm;\r\n    }\r\n\r\n    public setCss(target: any, css: object){\r\n        // 设置css样式\r\n        for(let attr in css){\r\n            target.style[attr] = css[attr];\r\n        }\r\n    }\r\n\r\n    public sleep(cb: Function, timeout: number){\r\n        // 延迟\r\n        setTimeout(cb, timeout);\r\n    }\r\n\r\n    public getToday(format: string): string{\r\n        // 获取今天的日期: 2019-01-01\r\n        let date = new Date();\r\n        let year = date.getFullYear();\r\n        let month: any = date.getMonth()+1;\r\n        let day: any = date.getDate();\r\n        month = month>=10? month: '0'+month;\r\n        day = day>=10? day: '0'+day;\r\n        return [year,month,day].join(format);\r\n    }\r\n\r\n    public $on(eventName: string, fn: Function){\r\n        // 订阅事件\r\n        if(this._eventLists[eventName]){\r\n            this._eventLists[eventName].push(fn);\r\n        }else{\r\n            this._eventLists[eventName] = [fn];\r\n            console.log('eventLists',this._eventLists[eventName]);\r\n        }\r\n    }\r\n\r\n    public $emit(eventName: string, ...args){\r\n        // 触发事件\r\n        if(this._eventLists[eventName]){\r\n            this._eventLists[eventName].forEach((fn,i)=>{\r\n                fn(...args);\r\n            })\r\n        }\r\n    }\r\n\r\n    // 自定义提示\r\n    public Tip(tipName: string, msg: string, timeout?: number){\r\n        let $tip = this.select(tipName);\r\n        let _this = this;\r\n        if(!$tip){\r\n            $tip = this.createElm(document.body,'div',tipName);\r\n        }\r\n\r\n        $tip.innerHTML = msg;\r\n\r\n        this.setCss($tip,{\r\n            'display':'block',\r\n            'opacity': '1'\r\n        });\r\n\r\n        this.sleep(()=>{\r\n            _this.setCss($tip,{\r\n                'opacity': '0'\r\n            })\r\n        },timeout|| 1000)\r\n\r\n        this.sleep(()=>{\r\n            _this.setCss($tip,{\r\n                'display': 'none'\r\n            })\r\n        },(timeout|| 1000)+300)\r\n    }\r\n\r\n    \r\n    public errorTip(msg: string, timeout?: number){\r\n        let tipName = 'datePicker-errorTip';\r\n        this.Tip(tipName, msg, timeout);\r\n\r\n    }\r\n\r\n    public successTip(msg: string, timeout?: number){\r\n        let tipName = 'datePicker-successTip';\r\n        this.Tip(tipName, msg, timeout);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}